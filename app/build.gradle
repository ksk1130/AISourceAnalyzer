/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/dev.langchain4j/langchain4j
    implementation group: 'dev.langchain4j', name: 'langchain4j', version: '1.1.0'

    // https://mvnrepository.com/artifact/dev.langchain4j/langchain4j-bedrock
    implementation group: 'dev.langchain4j', name: 'langchain4j-bedrock', version: '1.1.0-rc1'

    // https://mvnrepository.com/artifact/dev.langchain4j/langchain4j-azure-open-ai
    implementation group: 'dev.langchain4j', name: 'langchain4j-azure-open-ai', version: '1.1.0-rc1'

    implementation 'info.picocli:picocli:4.7.5'

    implementation platform('org.apache.logging.log4j:log4j-bom:2.20.0')
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl'
    implementation 'org.apache.logging.log4j:log4j-1.2-api'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
    applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

// 依存しているjarファイルをlibsディレクトリにコピーする
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into "../libs"
}

// 作成されたclassファイルと依存jarファイルをZIPファイルにまとめる
task zipApp(type: Zip) {
    from 'build/classes/java/main'
    from('../libs') {
        into 'libs'
    }
    from 'build/resources/main'
    from '../exec.bat'
    archiveFileName = 'javaSourceAnalyze_vX.X.zip'
    destinationDirectory = file('build/zip')
}